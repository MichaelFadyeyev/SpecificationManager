<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>144</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        umV5SJiTAAAAAElFTkSuQmCC
</value>
  </data>
</root>